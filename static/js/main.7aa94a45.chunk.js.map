{"version":3,"sources":["Components/SearchForm.tsx","Components/ListRepositories.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchForm","props","onSubmit","e","preventDefault","formData","FormData","target","search","get","type","name","ListRepositories","repositories","map","repo","href","html_url","full_name","id","App","React","useState","setRepositories","query","a","axios","result","data","items","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAyBeA,EAnBqB,SAACC,GAOjC,OACI,uBAAMC,SAPV,SAAsBC,GAClBA,EAAEC,iBACF,IAAMC,EAAW,IAAIC,SAASH,EAAEI,QAChCN,EAAMO,OAAQH,EAASI,IAAI,UAAY,KAIvC,UACI,2CAEI,uBACA,uBAAOC,KAAK,OAAOC,KAAK,aAE5B,gDCCGC,EAd2B,SAAC,GAA2B,IAAD,IAAxBC,oBAAwB,MAAT,GAAS,EACnE,OACE,6BACGA,EAAaC,KAAI,SAAAC,GAAI,OACpB,6BACE,mBAAGC,KAAMD,EAAKE,SAAUV,OAAO,SAA/B,SACGQ,EAAKG,aAFDH,EAAKI,U,MCmBPC,MAtBf,WAGE,MACEC,IAAMC,WADR,mBAAOT,EAAP,KAAqBU,EAArB,KAHa,4CAMb,WAAsBC,GAAtB,eAAAC,EAAA,sEACuBC,IAAMjB,IAAN,uDAC6Be,IAFpD,OACQG,EADR,OAIEJ,EAAgBI,EAAOC,KAAKC,OAJ9B,4CANa,sBAab,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,CAAYtB,OAfH,8CAgBT,uBACA,cAAC,EAAD,CAAkBK,aAAcA,QCXvBkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7aa94a45.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n    search(query: string): void;\n}\n\nconst SearchForm: React.FC<Props> = (props) => {\n    function handleSubmit(e: React.FormEvent) {\n        e.preventDefault();\n        const formData = new FormData(e.target as HTMLFormElement);\n        props.search((formData.get('query') || '') as string);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                Query:\n                <br />\n                <input type=\"text\" name=\"query\" />\n            </label>\n            <button>Search</button>\n        </form>\n    );\n}\n\nexport default SearchForm;","import { GitHubRepository } from \"../Types/GitHub\";\n\ninterface Props {\n  repositories?: Array<GitHubRepository>;\n}\n\n// React.FC represents our functional component\nconst ListRepositories: React.FC<Props> = ({ repositories = [] }) => {\n  return (\n    <ul>\n      {repositories.map(repo => (\n        <li key={repo.id}>\n          <a href={repo.html_url} target=\"_blank\">\n            {repo.full_name}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ListRepositories;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { GitHubRepository, GitHubSearchResultType } from \"./Types/GitHub\";\nimport SearchForm from \"./Components/SearchForm\";\nimport ListRepositories from \"./Components/ListRepositories\";\n\nimport \"./App.css\";\n\nfunction App() {\n  \n\n  const [repositories, setRepositories] =\n    React.useState<Array<GitHubRepository>>();\n\n  async function search(query: string) {\n    const result = await axios.get<GitHubSearchResultType>(\n      `https://api.github.com/search/repositories?q=${query}`\n    );\n    setRepositories(result.data.items);\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchForm search={search} />\n      <hr />\n      <ListRepositories repositories={repositories} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}